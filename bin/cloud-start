#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"

o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-n cloudname', '--name name', 'Start cloud by this name')    { |c| optioner.cloudname c }
end

o.loaded_clouds.each do |cld|
  if cld.list_of_running_instances.size.zero?
    puts header("Starting cloud #{cld.name}")
    puts "#{cld.list_of_running_instances.size} running instances (#{cld.minimum_instances} - #{cld.maximum_instances})"
    
    inst = cld.launch_instance!
    # unil inst.ip do 
    #   sleep 2
    #   node = cld.remote_instances_list.select {|i| i.running? }
    # end
    
    cld.when_no_pending_instances do
      cld.remote_instances_list.select {|i| i.running? }.each do |node|
        ::PoolParty::Provision::BootStrapper.new(node.ip, :full_keypair_path => cld.keypair.full_filepath, :cloud => cld)
        ::PoolParty::Provision::DrConfigure.new(node.ip,  :full_keypair_path => cld.keypair.full_filepath, :cloud => cld)
      end

      first_inst = cld.remote_instances_list.select {|i| i.running? }.first
      puts <<-EOM
        Your cloud has started. Your ip is #{first_inst.ip}
      EOM
    end
  else
    puts <<-EOE
      Your cloud is already running.
    EOE
  end
end