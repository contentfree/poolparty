#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"

o = PoolParty::Optioner.new(ARGV) do |opts, optioner|
  opts.on('-n cloudname', '--name name', 'Start cloud by this name')    { |c| optioner.cloudname c }
end

o.loaded_clouds.each do |cld|
  if list_of_running_instances.size.zero?
    vputs header("Starting cloud #{name}")
    vputs "#{list_of_running_instances.size} running instances (#{minimum_instances} - #{maximum_instances})"
    
    inst = cld.launch_instance!
    
    ::PoolParty::Provision::BootStrapper.new( inst.ip, {:full_keypair_path => cld.keypair.full_filepath} )
    ::PoolParty::Provision::DrConfigure.new( inst.ip, :full_keypair_path => cld.keypair.full_filepath, 
                                                      :cloud => cld )
    when_no_pending_instances do
      vputs <<-EOM
        Your cloud has started. Your ip is #{inst.ip}
      EOM
    end
  else
    vputs <<-EOE
      Your cloud is already running.
    EOE
  end
end
