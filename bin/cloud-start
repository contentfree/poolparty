#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "poolparty"
require "poolpartycl"

o = PoolParty::Optioner.new(ARGV) do |opts, optioner|  
  optioner.cloudnames
  optioner.daemonizeable
end

o.loaded_clouds.each do |cloud|
  with_cloud(cloud) do
    setup_dev
    vputs header("Starting cloud #{name}")
    vputs "#{list_of_running_instances.size} running instances (#{minimum_instances} - #{maximum_instances})"
    # if list_of_running_instances.size <= 1
      puts "Starting the master instance"    
      # if testing
      #   puts("\tNot launching while in testing mode")
      # else
        vputs "Launching and configuring the master"
        @cl = self
        daemon ? daemonize {@cl.launch_and_configure_master!(testing)} : launch_and_configure_master!(testing)
      # end
    # end
    when_no_pending_instances do
      puts open(::File.join(File.dirname(__FILE__), "..", "lib", "poolparty", "config", "postlaunchmessage.txt")).read ^ {:first_ip => ip}
      clear_base_directory unless testing
    end
  end
  
end